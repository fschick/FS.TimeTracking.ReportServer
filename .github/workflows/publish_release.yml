name: Publish Demo Application

on:
  release:
    types: [ published ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 7.0.x
    - name: Build
      shell: pwsh
      run: Build/scripts/reportserver.build.ps1
  
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 7.0.x
    - name: Test
      shell: pwsh
      run: Build/scripts/reportserver.test.ps1
    - name: Upload test results
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: |
          ./**/TestResults/*.trx
          ./**/TestResults/*.html
        retention-days: 10
      if: ${{ always() }}
 
  publish_windows:
    needs: [build, test]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 7.0.x
    - name: Publish
      shell: pwsh
      run: Build/scripts/reportserver.publish.ps1 -version ${{github.ref_name}} -runtime win10-x64 -publshFolder timetracking.reportserver.${{github.ref_name}}.windows
    - name: Create Windows release artifact
      uses: thedoctor0/zip-release@master
      with:
        type: 'zip'
        filename: timetracking.reportserver.${{github.ref_name}}.windows.zip
        path: timetracking.reportserver.${{github.ref_name}}.windows
    - name: Upload Windows release artifact
      uses: softprops/action-gh-release@v1
      with:
        files: timetracking.reportserver.${{github.ref_name}}.windows.zip
  
  publish_linux:
    needs: [build, test]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 7.0.x
    - name: Publish
      shell: pwsh
      run: Build/scripts/reportserver.publish.ps1 -version ${{github.ref_name}} -runtime linux-x64 -publshFolder timetracking.reportserver.${{github.ref_name}}.linux
    - name: Create Linux release artifact
      uses: thedoctor0/zip-release@master
      with:
        type: 'zip'
        filename: timetracking.reportserver.${{github.ref_name}}.linux.zip
        path: timetracking.reportserver.${{github.ref_name}}.linux
    - name: Upload Linux release artifact
      uses: softprops/action-gh-release@v1
      with:
        files: timetracking.reportserver.${{github.ref_name}}.linux.zip
        
  publish_docker_image:
    needs: [build, test]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build image and push to Docker Hub and GitHub Container Registry
      uses: docker/build-push-action@v2
      with:
        file: ./Build/docker/reportserver.docker
        build-args: |
          CI_PROJECT_NAME=TimeTracking.ReportServer
          CI_COMMIT_REF_NAME=${{github.ref_name}}
        tags: |
          schicksoftware/timetracking.reportserver:${{github.ref_name}}
          schicksoftware/timetracking.reportserver:latest
        push: ${{ !contains(github.ref, 'alpha') && !contains(github.ref, 'beta') }}
        # push: true
    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}